{"ast":null,"code":"const API_BASE_URL = \"http://localhost:5436\"; // URL менеджера пользователей\n\nexport const registerUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Registration failed\");\n  }\n  return response.json();\n};\nexport const loginUser = async (email, password) => {\n  const response = await fetch(`${API_BASE_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!response.ok) {\n    throw new Error(\"Login failed\");\n  }\n  return response.json();\n};\nexport const getTasks = async token => {\n  const response = await fetch(`${API_BASE_URL}/tasks`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error(\"Failed to fetch tasks\");\n  }\n  return response.json();\n};","map":{"version":3,"names":["API_BASE_URL","registerUser","email","password","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","loginUser","getTasks","token","Authorization"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/services/api.js"],"sourcesContent":["const API_BASE_URL = \"http://localhost:5436\"; // URL менеджера пользователей\r\n\r\nexport const registerUser = async (email, password) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/register`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\"Registration failed\");\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const loginUser = async (email, password) => {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\"Login failed\");\r\n    }\r\n    return response.json();\r\n};\r\n\r\nexport const getTasks = async (token) => {\r\n    const response = await fetch(`${API_BASE_URL}/tasks`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(\"Failed to fetch tasks\");\r\n    }\r\n    return response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACnD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,gBAAgB,EAAE;IAC1DM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EAC1C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOZ,KAAK,EAAEC,QAAQ,KAAK;EAChD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,aAAa,EAAE;IACvDM,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC5C,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;EACnC;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAME,QAAQ,GAAG,MAAOC,KAAK,IAAK;EACrC,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,YAAY,QAAQ,EAAE;IAClDO,OAAO,EAAE;MAAEU,aAAa,EAAE,UAAUD,KAAK;IAAG;EAChD,CAAC,CAAC;EAEF,IAAI,CAACZ,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC5C;EACA,OAAOR,QAAQ,CAACS,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}