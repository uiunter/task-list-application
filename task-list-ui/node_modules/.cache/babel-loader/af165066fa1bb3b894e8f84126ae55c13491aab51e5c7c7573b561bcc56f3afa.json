{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIOCOCN\\\\Documents\\\\Git\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // Получение задач из API при загрузке\n  useEffect(() => {\n    fetch('/api/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n\n  // Добавление задачи\n  const addTask = task => {\n    fetch('/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => setTasks([...tasks, newTask])).catch(error => console.error('Error adding task:', error));\n  };\n  const updateTask = updatedFields => {\n    fetch(`/api/tasks/${updatedFields.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedFields)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.text().then(text => text ? JSON.parse(text) : {});\n    }).then(() => {\n      setTasks(tasks.map(task => task.id === updatedFields.id ? {\n        ...task,\n        ...updatedFields\n      } : task));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n\n  // Удаление задачи\n  const deleteTask = taskId => {\n    fetch(`/api/tasks/${taskId}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskInput","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","newTask","updateTask","updatedFields","id","ok","Error","status","text","parse","map","deleteTask","taskId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport './App.css';\n\nconst App = () => {\n    const [tasks, setTasks] = useState([]);\n\n    // Получение задач из API при загрузке\n    useEffect(() => {\n        fetch('/api/tasks')\n            .then(response => response.json())\n            .then(data => setTasks(data))\n            .catch(error => console.error('Error fetching tasks:', error));\n    }, []);\n\n    // Добавление задачи\n    const addTask = (task) => {\n        fetch('/api/tasks', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(task),\n        })\n            .then(response => response.json())\n            .then(newTask => setTasks([...tasks, newTask]))\n            .catch(error => console.error('Error adding task:', error));\n    };\n\n    const updateTask = (updatedFields) => {\n        fetch(`/api/tasks/${updatedFields.id}`, {\n            method: 'PATCH',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(updatedFields),\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.text().then(text => text ? JSON.parse(text) : {});\n            })\n            .then(() => {\n                setTasks(tasks.map(task =>\n                    task.id === updatedFields.id ? { ...task, ...updatedFields } : task\n                ));\n            })\n            .catch(error => console.error('Error updating task:', error));\n    };\n\n    // Удаление задачи\n    const deleteTask = (taskId) => {\n        fetch(`/api/tasks/${taskId}`, { method: 'DELETE' })\n            .then(() => {\n                setTasks(tasks.filter(task => task.id !== taskId));\n            })\n            .catch(error => console.error('Error deleting task:', error));\n    };\n\n    return (\n        <div className=\"app\">\n            <h1>To-Do List</h1>\n            <TaskInput addTask={addTask} />\n            <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}