{"ast":null,"code":"import axios from 'axios';\nconst TASKS_API_BASE_URL = 'http://localhost:8088/api/tasks';\nconst tasksClient = axios.create({\n  baseURL: TASKS_API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Устанавливаем токен для запросов\nexport const setAuthToken = token => {\n  if (token) {\n    tasksClient.defaults.headers.Authorization = `Bearer ${token}`;\n  } else {\n    delete tasksClient.defaults.headers.Authorization;\n  }\n};\nexport const getAllTasks = async () => {\n  const response = await tasksClient.get('/');\n  return response.data;\n};\nexport const getTaskById = async id => {\n  const response = await tasksClient.get(`/${id}`);\n  return response.data;\n};\nexport const createTask = async task => {\n  const response = await tasksClient.post('/', task);\n  return response.data;\n};\nexport const updateTaskById = async (id, task) => {\n  const response = await tasksClient.patch(`/${id}`, task);\n  return response.data;\n};\nexport const deleteTaskById = async id => {\n  const response = await tasksClient.delete(`/${id}`);\n  return response.data;\n};","map":{"version":3,"names":["axios","TASKS_API_BASE_URL","tasksClient","create","baseURL","headers","setAuthToken","token","defaults","Authorization","getAllTasks","response","get","data","getTaskById","id","createTask","task","post","updateTaskById","patch","deleteTaskById","delete"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/api/taskApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst TASKS_API_BASE_URL = 'http://localhost:8088/api/tasks';\r\n\r\nconst tasksClient = axios.create({\r\n    baseURL: TASKS_API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\n// Устанавливаем токен для запросов\r\nexport const setAuthToken = (token) => {\r\n    if (token) {\r\n        tasksClient.defaults.headers.Authorization = `Bearer ${token}`;\r\n    } else {\r\n        delete tasksClient.defaults.headers.Authorization;\r\n    }\r\n};\r\n\r\nexport const getAllTasks = async () => {\r\n    const response = await tasksClient.get('/');\r\n    return response.data;\r\n};\r\n\r\nexport const getTaskById = async (id) => {\r\n    const response = await tasksClient.get(`/${id}`);\r\n    return response.data;\r\n};\r\n\r\nexport const createTask = async (task) => {\r\n    const response = await tasksClient.post('/', task);\r\n    return response.data;\r\n};\r\n\r\nexport const updateTaskById = async (id, task) => {\r\n    const response = await tasksClient.patch(`/${id}`, task);\r\n    return response.data;\r\n};\r\n\r\nexport const deleteTaskById = async (id) => {\r\n    const response = await tasksClient.delete(`/${id}`);\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,kBAAkB,GAAG,iCAAiC;AAE5D,MAAMC,WAAW,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,kBAAkB;EAC3BI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,IAAIA,KAAK,EAAE;IACPL,WAAW,CAACM,QAAQ,CAACH,OAAO,CAACI,aAAa,GAAG,UAAUF,KAAK,EAAE;EAClE,CAAC,MAAM;IACH,OAAOL,WAAW,CAACM,QAAQ,CAACH,OAAO,CAACI,aAAa;EACrD;AACJ,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAMC,QAAQ,GAAG,MAAMT,WAAW,CAACU,GAAG,CAAC,GAAG,CAAC;EAC3C,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,WAAW,GAAG,MAAOC,EAAE,IAAK;EACrC,MAAMJ,QAAQ,GAAG,MAAMT,WAAW,CAACU,GAAG,CAAC,IAAIG,EAAE,EAAE,CAAC;EAChD,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAMN,QAAQ,GAAG,MAAMT,WAAW,CAACgB,IAAI,CAAC,GAAG,EAAED,IAAI,CAAC;EAClD,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMM,cAAc,GAAG,MAAAA,CAAOJ,EAAE,EAAEE,IAAI,KAAK;EAC9C,MAAMN,QAAQ,GAAG,MAAMT,WAAW,CAACkB,KAAK,CAAC,IAAIL,EAAE,EAAE,EAAEE,IAAI,CAAC;EACxD,OAAON,QAAQ,CAACE,IAAI;AACxB,CAAC;AAED,OAAO,MAAMQ,cAAc,GAAG,MAAON,EAAE,IAAK;EACxC,MAAMJ,QAAQ,GAAG,MAAMT,WAAW,CAACoB,MAAM,CAAC,IAAIP,EAAE,EAAE,CAAC;EACnD,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}