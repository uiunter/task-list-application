{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIOCOCN\\\\Documents\\\\Git\\\\task-manager\\\\src\\\\components\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TaskInput from '../TaskInput';\nimport TaskList from '../TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Проверка токена при загрузке\n  useEffect(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (token) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  // Получение задач пользователя\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetch('/api/tasks', {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n        }\n      }).then(response => {\n        if (!response.ok) throw new Error('Failed to fetch tasks');\n        return response.json();\n      }).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n    }\n  }, [isAuthenticated]);\n\n  // Добавление задачи\n  const addTask = task => {\n    fetch('/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => setTasks([...tasks, newTask])).catch(error => console.error('Error adding task:', error));\n  };\n\n  // Обновление задачи\n  const updateTask = updatedFields => {\n    fetch(`/api/tasks/${updatedFields.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n      },\n      body: JSON.stringify(updatedFields)\n    }).then(response => response.json()).then(() => {\n      setTasks(tasks.map(task => task.id === updatedFields.id ? {\n        ...task,\n        ...updatedFields\n      } : task));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n\n  // Удаление задачи\n  const deleteTask = taskId => {\n    fetch(`/api/tasks/${taskId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n      }\n    }).then(() => setTasks(tasks.filter(task => task.id !== taskId))).catch(error => console.error('Error deleting task:', error));\n  };\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u041F\\u043E\\u0436\\u0430\\u043B\\u0443\\u0439\\u0441\\u0442\\u0430, \\u0432\\u043E\\u0439\\u0434\\u0438\\u0442\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"xihdomKqhe8pJEGI1xLR3GsvQ5w=\");\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","TaskInput","TaskList","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fetch","headers","Authorization","then","response","ok","Error","json","data","catch","error","console","addTask","task","method","body","JSON","stringify","newTask","updateTask","updatedFields","id","map","deleteTask","taskId","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/components/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TaskInput from '../TaskInput';\r\nimport TaskList from '../TaskList';\r\n\r\nconst TaskPage = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    // Проверка токена при загрузке\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('jwtToken');\r\n        if (token) {\r\n            setIsAuthenticated(true);\r\n        }\r\n    }, []);\r\n\r\n    // Получение задач пользователя\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            fetch('/api/tasks', {\r\n                headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\r\n                },\r\n            })\r\n                .then((response) => {\r\n                    if (!response.ok) throw new Error('Failed to fetch tasks');\r\n                    return response.json();\r\n                })\r\n                .then((data) => setTasks(data))\r\n                .catch((error) => console.error('Error fetching tasks:', error));\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    // Добавление задачи\r\n    const addTask = (task) => {\r\n        fetch('/api/tasks', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\r\n            },\r\n            body: JSON.stringify(task),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((newTask) => setTasks([...tasks, newTask]))\r\n            .catch((error) => console.error('Error adding task:', error));\r\n    };\r\n\r\n    // Обновление задачи\r\n    const updateTask = (updatedFields) => {\r\n        fetch(`/api/tasks/${updatedFields.id}`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\r\n            },\r\n            body: JSON.stringify(updatedFields),\r\n        })\r\n            .then((response) => response.json())\r\n            .then(() => {\r\n                setTasks(tasks.map((task) =>\r\n                    task.id === updatedFields.id ? { ...task, ...updatedFields } : task\r\n                ));\r\n            })\r\n            .catch((error) => console.error('Error updating task:', error));\r\n    };\r\n\r\n    // Удаление задачи\r\n    const deleteTask = (taskId) => {\r\n        fetch(`/api/tasks/${taskId}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`,\r\n            },\r\n        })\r\n            .then(() => setTasks(tasks.filter((task) => task.id !== taskId)))\r\n            .catch((error) => console.error('Error deleting task:', error));\r\n    };\r\n\r\n    if (!isAuthenticated) {\r\n        return <p>Пожалуйста, войдите в систему.</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">To-Do List</h1>\r\n            <TaskInput addTask={addTask} />\r\n            <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}