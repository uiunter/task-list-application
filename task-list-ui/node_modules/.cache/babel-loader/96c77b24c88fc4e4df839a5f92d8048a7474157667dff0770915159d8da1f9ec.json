{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIOCOCN\\\\Documents\\\\Git\\\\task-list-app\\\\task-list-ui\\\\src\\\\components\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TaskInput from '../TaskInput';\nimport TaskList from '../TaskList';\nimport { fetchTasks, createTask, updateTaskById, deleteTaskById } from '../../api/taskApi';\nimport { useAuth } from '../AuthContext';\nimport { ArrowRightOnRectangleIcon } from \"@heroicons/react/20/solid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const {\n    authState,\n    userLogout\n  } = useAuth();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      navigate('/login');\n      return;\n    }\n    fetchTasks(authState.token).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, [authState, navigate]);\n  const addTask = task => {\n    createTask(task, authState.token).then(newTask => setTasks([...tasks, newTask])).catch(error => console.error('Error adding task:', error));\n  };\n  const updateTask = updatedFields => {\n    updateTaskById(updatedFields.id, updatedFields, authState.token).then(() => {\n      setTasks(tasks.map(task => task.id === updatedFields.id ? {\n        ...task,\n        ...updatedFields\n      } : task));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n  const deleteTask = taskId => {\n    deleteTaskById(taskId, authState.token).then(() => setTasks(tasks.filter(task => task.id !== taskId))).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleLogout = () => {\n    userLogout();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-10 px-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto bg-white rounded-lg shadow-lg p-6 relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        className: \"absolute top-4 right-4 text-gray-500 hover:text-red-500\",\n        title: \"Logout\",\n        children: /*#__PURE__*/_jsxDEV(ArrowRightOnRectangleIcon, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-gray-800 mb-6 text-center\",\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        tasks: tasks,\n        updateTask: updateTask,\n        deleteTask: deleteTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"6LyGyKhH8DLMMve1XneylP4jKU4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TaskInput","TaskList","fetchTasks","createTask","updateTaskById","deleteTaskById","useAuth","ArrowRightOnRectangleIcon","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","authState","userLogout","navigate","isAuthenticated","token","then","data","catch","error","console","addTask","task","newTask","updateTask","updatedFields","id","map","deleteTask","taskId","filter","handleLogout","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-list-app/task-list-ui/src/components/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport TaskInput from '../TaskInput';\r\nimport TaskList from '../TaskList';\r\nimport { fetchTasks, createTask, updateTaskById, deleteTaskById } from '../../api/taskApi';\r\nimport { useAuth } from '../AuthContext';\r\nimport {ArrowRightOnRectangleIcon} from \"@heroicons/react/20/solid\";\r\n\r\n\r\nconst TaskPage = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const { authState, userLogout } = useAuth();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (!authState.isAuthenticated) {\r\n            navigate('/login');\r\n            return;\r\n        }\r\n\r\n        fetchTasks(authState.token)\r\n            .then((data) => setTasks(data))\r\n            .catch((error) => console.error('Error fetching tasks:', error));\r\n    }, [authState, navigate]);\r\n\r\n    const addTask = (task) => {\r\n        createTask(task, authState.token)\r\n            .then((newTask) => setTasks([...tasks, newTask]))\r\n            .catch((error) => console.error('Error adding task:', error));\r\n    };\r\n\r\n    const updateTask = (updatedFields) => {\r\n        updateTaskById(updatedFields.id, updatedFields, authState.token)\r\n            .then(() => {\r\n                setTasks(tasks.map((task) =>\r\n                    task.id === updatedFields.id ? { ...task, ...updatedFields } : task\r\n                ));\r\n            })\r\n            .catch((error) => console.error('Error updating task:', error));\r\n    };\r\n\r\n    const deleteTask = (taskId) => {\r\n        deleteTaskById(taskId, authState.token)\r\n            .then(() => setTasks(tasks.filter((task) => task.id !== taskId)))\r\n            .catch((error) => console.error('Error deleting task:', error));\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        userLogout();\r\n        navigate('/login');\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-gray-100 py-10 px-6\">\r\n            <div className=\"max-w-4xl mx-auto bg-white rounded-lg shadow-lg p-6 relative\">\r\n                <button\r\n                    onClick={handleLogout}\r\n                    className=\"absolute top-4 right-4 text-gray-500 hover:text-red-500\"\r\n                    title=\"Logout\"\r\n                >\r\n                    <ArrowRightOnRectangleIcon className=\"w-6 h-6\" />\r\n                </button>\r\n                <h1 className=\"text-3xl font-bold text-gray-800 mb-6 text-center\">To-Do List</h1>\r\n                <TaskInput addTask={addTask} />\r\n                <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}