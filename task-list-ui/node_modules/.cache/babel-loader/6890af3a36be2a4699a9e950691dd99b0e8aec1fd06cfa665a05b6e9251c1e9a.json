{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8088/api/v1/auth';\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const authenticate = async (username, password) => {\n  try {\n    const response = await apiClient.post('/', {\n      username,\n      password\n    });\n    return response.data; // Возвращаем данные при успешном запросе\n  } catch (error) {\n    var _error$response;\n    console.error('Error during authentication:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n    throw error; // Пробрасываем ошибку для обработки в компоненте\n  }\n};\n\n// Регистрация\nexport const register = async (username, password, email) => {\n  const response = await apiClient.post('/register', {\n    username,\n    password,\n    email\n  });\n  return response.data;\n};\n\n// Активация аккаунта\nexport const activateAccount = async token => {\n  const response = await apiClient.get('/activate-account', {\n    params: {\n      token\n    } // Удобная передача query-параметров\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_BASE_URL","apiClient","create","baseURL","headers","authenticate","username","password","response","post","data","error","_error$response","console","register","email","activateAccount","token","get","params"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/api/authApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8088/api/v1/auth';\r\n\r\nconst apiClient = axios.create({\r\n    baseURL: API_BASE_URL,\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n});\r\n\r\nexport const authenticate = async (username, password) => {\r\n    try {\r\n        const response = await apiClient.post('/', { username, password });\r\n        return response.data; // Возвращаем данные при успешном запросе\r\n    } catch (error) {\r\n        console.error('Error during authentication:', error.response?.data);\r\n        throw error; // Пробрасываем ошибку для обработки в компоненте\r\n    }\r\n};\r\n\r\n// Регистрация\r\nexport const register = async (username, password, email) => {\r\n    const response = await apiClient.post('/register', { username, password, email });\r\n    return response.data;\r\n};\r\n\r\n// Активация аккаунта\r\nexport const activateAccount = async (token) => {\r\n    const response = await apiClient.get('/activate-account', {\r\n        params: { token }, // Удобная передача query-параметров\r\n    });\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,mCAAmC;AAExD,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC3BC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACtD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,SAAS,CAACQ,IAAI,CAAC,GAAG,EAAE;MAAEH,QAAQ;MAAEC;IAAS,CAAC,CAAC;IAClE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA;IACZC,OAAO,CAACF,KAAK,CAAC,8BAA8B,GAAAC,eAAA,GAAED,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,CAAC;IACnE,MAAMC,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,QAAQ,GAAG,MAAAA,CAAOR,QAAQ,EAAEC,QAAQ,EAAEQ,KAAK,KAAK;EACzD,MAAMP,QAAQ,GAAG,MAAMP,SAAS,CAACQ,IAAI,CAAC,WAAW,EAAE;IAAEH,QAAQ;IAAEC,QAAQ;IAAEQ;EAAM,CAAC,CAAC;EACjF,OAAOP,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMM,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC5C,MAAMT,QAAQ,GAAG,MAAMP,SAAS,CAACiB,GAAG,CAAC,mBAAmB,EAAE;IACtDC,MAAM,EAAE;MAAEF;IAAM,CAAC,CAAE;EACvB,CAAC,CAAC;EACF,OAAOT,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}