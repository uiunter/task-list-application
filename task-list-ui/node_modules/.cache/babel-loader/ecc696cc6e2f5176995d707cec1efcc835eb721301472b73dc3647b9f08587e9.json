{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIOCOCN\\\\Documents\\\\Git\\\\task-manager\\\\src\\\\components\\\\pages\\\\TaskPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TaskInput from '../TaskInput';\nimport TaskList from '../TaskList';\nimport { fetchTasks, createTask, updateTaskById, deleteTaskById } from '../../api/taskApi'; // API-запросы\nimport { useAuth } from '../AuthContext'; // Контекст авторизации\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskPage = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const {\n    isAuthenticated,\n    token\n  } = useAuth(); // Проверяем авторизацию и получаем токен\n  const navigate = useNavigate();\n\n  // Получение задач пользователя при загрузке\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login'); // Перенаправляем на логин, если не авторизованы\n      return;\n    }\n    fetchTasks(token).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, [isAuthenticated, token, navigate]);\n\n  // Добавление задачи\n  const addTask = task => {\n    createTask(task, token).then(newTask => setTasks([...tasks, newTask])).catch(error => console.error('Error adding task:', error));\n  };\n\n  // Обновление задачи\n  const updateTask = updatedFields => {\n    updateTaskById(updatedFields.id, updatedFields, token).then(() => {\n      setTasks(tasks.map(task => task.id === updatedFields.id ? {\n        ...task,\n        ...updatedFields\n      } : task));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n\n  // Удаление задачи\n  const deleteTask = taskId => {\n    deleteTaskById(taskId, token).then(() => setTasks(tasks.filter(task => task.id !== taskId))).catch(error => console.error('Error deleting task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-4\",\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskPage, \"AwWAsKQ7x8QP3JtNp3EUyfkxjLE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = TaskPage;\nexport default TaskPage;\nvar _c;\n$RefreshReg$(_c, \"TaskPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","TaskInput","TaskList","fetchTasks","createTask","updateTaskById","deleteTaskById","useAuth","jsxDEV","_jsxDEV","TaskPage","_s","tasks","setTasks","isAuthenticated","token","navigate","then","data","catch","error","console","addTask","task","newTask","updateTask","updatedFields","id","map","deleteTask","taskId","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/components/pages/TaskPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport TaskInput from '../TaskInput';\r\nimport TaskList from '../TaskList';\r\nimport { fetchTasks, createTask, updateTaskById, deleteTaskById } from '../../api/taskApi'; // API-запросы\r\nimport { useAuth } from '../AuthContext'; // Контекст авторизации\r\n\r\nconst TaskPage = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const { isAuthenticated, token } = useAuth(); // Проверяем авторизацию и получаем токен\r\n    const navigate = useNavigate();\r\n\r\n    // Получение задач пользователя при загрузке\r\n    useEffect(() => {\r\n        if (!isAuthenticated) {\r\n            navigate('/login'); // Перенаправляем на логин, если не авторизованы\r\n            return;\r\n        }\r\n\r\n        fetchTasks(token)\r\n            .then((data) => setTasks(data))\r\n            .catch((error) => console.error('Error fetching tasks:', error));\r\n    }, [isAuthenticated, token, navigate]);\r\n\r\n    // Добавление задачи\r\n    const addTask = (task) => {\r\n        createTask(task, token)\r\n            .then((newTask) => setTasks([...tasks, newTask]))\r\n            .catch((error) => console.error('Error adding task:', error));\r\n    };\r\n\r\n    // Обновление задачи\r\n    const updateTask = (updatedFields) => {\r\n        updateTaskById(updatedFields.id, updatedFields, token)\r\n            .then(() => {\r\n                setTasks(tasks.map((task) =>\r\n                    task.id === updatedFields.id ? { ...task, ...updatedFields } : task\r\n                ));\r\n            })\r\n            .catch((error) => console.error('Error updating task:', error));\r\n    };\r\n\r\n    // Удаление задачи\r\n    const deleteTask = (taskId) => {\r\n        deleteTaskById(taskId, token)\r\n            .then(() => setTasks(tasks.filter((task) => task.id !== taskId)))\r\n            .catch((error) => console.error('Error deleting task:', error));\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1 className=\"text-2xl font-bold mb-4\">To-Do List</h1>\r\n            <TaskInput addTask={addTask} />\r\n            <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}