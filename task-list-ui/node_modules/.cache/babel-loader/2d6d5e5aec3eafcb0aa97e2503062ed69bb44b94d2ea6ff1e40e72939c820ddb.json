{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIOCOCN\\\\Documents\\\\Git\\\\task-manager\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport LoginPage from './pages/LoginPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Получение задач из API при загрузке\n  useEffect(() => {\n    if (isAuthenticated) {\n      fetch('/api/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n    }\n  }, [isAuthenticated]);\n\n  // Добавление задачи\n  const addTask = task => {\n    fetch('/api/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => setTasks([...tasks, newTask])).catch(error => console.error('Error adding task:', error));\n  };\n  const updateTask = updatedFields => {\n    fetch(`/api/tasks/${updatedFields.id}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedFields)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.text().then(text => text ? JSON.parse(text) : {});\n    }).then(() => {\n      setTasks(tasks.map(task => task.id === updatedFields.id ? {\n        ...task,\n        ...updatedFields\n      } : task));\n    }).catch(error => console.error('Error updating task:', error));\n  };\n\n  // Удаление задачи\n  const deleteTask = taskId => {\n    fetch(`/api/tasks/${taskId}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setTasks(tasks.filter(task => task.id !== taskId));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleLogin = credentials => {\n    // Пример аутентификации (замените на реальную логику)\n    if (credentials.username === 'user' && credentials.password === 'password') {\n      setIsAuthenticated(true);\n    } else {\n      alert('Неверные данные для входа!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"To-Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n            addTask: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n            tasks: tasks,\n            updateTask: updateTask,\n            deleteTask: deleteTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginPage, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"NO0F/33wW83vWwq7btHL2BlKltg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","TaskInput","TaskList","LoginPage","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","isAuthenticated","setIsAuthenticated","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","newTask","updateTask","updatedFields","id","ok","Error","status","text","parse","map","deleteTask","taskId","filter","handleLogin","credentials","username","password","alert","children","path","element","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onLogin","_c","$RefreshReg$"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport TaskInput from './components/TaskInput';\r\nimport TaskList from './components/TaskList';\r\nimport LoginPage from './pages/LoginPage';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    // Получение задач из API при загрузке\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            fetch('/api/tasks')\r\n                .then((response) => response.json())\r\n                .then((data) => setTasks(data))\r\n                .catch((error) => console.error('Error fetching tasks:', error));\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    // Добавление задачи\r\n    const addTask = (task) => {\r\n        fetch('/api/tasks', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(task),\r\n        })\r\n            .then((response) => response.json())\r\n            .then((newTask) => setTasks([...tasks, newTask]))\r\n            .catch((error) => console.error('Error adding task:', error));\r\n    };\r\n\r\n    const updateTask = (updatedFields) => {\r\n        fetch(`/api/tasks/${updatedFields.id}`, {\r\n            method: 'PATCH',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(updatedFields),\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n                return response.text().then((text) => (text ? JSON.parse(text) : {}));\r\n            })\r\n            .then(() => {\r\n                setTasks(\r\n                    tasks.map((task) =>\r\n                        task.id === updatedFields.id ? { ...task, ...updatedFields } : task\r\n                    )\r\n                );\r\n            })\r\n            .catch((error) => console.error('Error updating task:', error));\r\n    };\r\n\r\n    // Удаление задачи\r\n    const deleteTask = (taskId) => {\r\n        fetch(`/api/tasks/${taskId}`, { method: 'DELETE' })\r\n            .then(() => {\r\n                setTasks(tasks.filter((task) => task.id !== taskId));\r\n            })\r\n            .catch((error) => console.error('Error deleting task:', error));\r\n    };\r\n\r\n    const handleLogin = (credentials) => {\r\n        // Пример аутентификации (замените на реальную логику)\r\n        if (credentials.username === 'user' && credentials.password === 'password') {\r\n            setIsAuthenticated(true);\r\n        } else {\r\n            alert('Неверные данные для входа!');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route\r\n                    path=\"/\"\r\n                    element={\r\n                        isAuthenticated ? (\r\n                            <div className=\"app\">\r\n                                <h1>To-Do List</h1>\r\n                                <TaskInput addTask={addTask} />\r\n                                <TaskList tasks={tasks} updateTask={updateTask} deleteTask={deleteTask} />\r\n                            </div>\r\n                        ) : (\r\n                            <Navigate to=\"/login\" />\r\n                        )\r\n                    }\r\n                />\r\n                <Route path=\"/login\" element={<LoginPage onLogin={handleLogin} />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACZ,IAAIe,eAAe,EAAE;MACjBE,KAAK,CAAC,YAAY,CAAC,CACdC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IACxE;EACJ,CAAC,EAAE,CAACR,eAAe,CAAC,CAAC;;EAErB;EACA,MAAMU,OAAO,GAAIC,IAAI,IAAK;IACtBT,KAAK,CAAC,YAAY,EAAE;MAChBU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC7B,CAAC,CAAC,CACGR,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEc,OAAO,IAAKlB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEmB,OAAO,CAAC,CAAC,CAAC,CAChDV,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAED,MAAMU,UAAU,GAAIC,aAAa,IAAK;IAClCjB,KAAK,CAAC,cAAciB,aAAa,CAACC,EAAE,EAAE,EAAE;MACpCR,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,aAAa;IACtC,CAAC,CAAC,CACGhB,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACiB,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBlB,QAAQ,CAACmB,MAAM,EAAE,CAAC;MAC7D;MACA,OAAOnB,QAAQ,CAACoB,IAAI,CAAC,CAAC,CAACrB,IAAI,CAAEqB,IAAI,IAAMA,IAAI,GAAGT,IAAI,CAACU,KAAK,CAACD,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;IACzE,CAAC,CAAC,CACDrB,IAAI,CAAC,MAAM;MACRJ,QAAQ,CACJD,KAAK,CAAC4B,GAAG,CAAEf,IAAI,IACXA,IAAI,CAACS,EAAE,KAAKD,aAAa,CAACC,EAAE,GAAG;QAAE,GAAGT,IAAI;QAAE,GAAGQ;MAAc,CAAC,GAAGR,IACnE,CACJ,CAAC;IACL,CAAC,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;;EAED;EACA,MAAMmB,UAAU,GAAIC,MAAM,IAAK;IAC3B1B,KAAK,CAAC,cAAc0B,MAAM,EAAE,EAAE;MAAEhB,MAAM,EAAE;IAAS,CAAC,CAAC,CAC9CT,IAAI,CAAC,MAAM;MACRJ,QAAQ,CAACD,KAAK,CAAC+B,MAAM,CAAElB,IAAI,IAAKA,IAAI,CAACS,EAAE,KAAKQ,MAAM,CAAC,CAAC;IACxD,CAAC,CAAC,CACDrB,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;EAED,MAAMsB,WAAW,GAAIC,WAAW,IAAK;IACjC;IACA,IAAIA,WAAW,CAACC,QAAQ,KAAK,MAAM,IAAID,WAAW,CAACE,QAAQ,KAAK,UAAU,EAAE;MACxEhC,kBAAkB,CAAC,IAAI,CAAC;IAC5B,CAAC,MAAM;MACHiC,KAAK,CAAC,4BAA4B,CAAC;IACvC;EACJ,CAAC;EAED,oBACIvC,OAAA,CAACR,MAAM;IAAAgD,QAAA,eACHxC,OAAA,CAACP,MAAM;MAAA+C,QAAA,gBACHxC,OAAA,CAACN,KAAK;QACF+C,IAAI,EAAC,GAAG;QACRC,OAAO,EACHrC,eAAe,gBACXL,OAAA;UAAK2C,SAAS,EAAC,KAAK;UAAAH,QAAA,gBAChBxC,OAAA;YAAAwC,QAAA,EAAI;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB/C,OAAA,CAACJ,SAAS;YAACmB,OAAO,EAAEA;UAAQ;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/B/C,OAAA,CAACH,QAAQ;YAACM,KAAK,EAAEA,KAAM;YAACoB,UAAU,EAAEA,UAAW;YAACS,UAAU,EAAEA;UAAW;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzE,CAAC,gBAEN/C,OAAA,CAACL,QAAQ;UAACqD,EAAE,EAAC;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAE9B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eACF/C,OAAA,CAACN,KAAK;QAAC+C,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAE1C,OAAA,CAACF,SAAS;UAACmD,OAAO,EAAEd;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAAC7C,EAAA,CAvFID,GAAG;AAAAiD,EAAA,GAAHjD,GAAG;AAyFT,eAAeA,GAAG;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}