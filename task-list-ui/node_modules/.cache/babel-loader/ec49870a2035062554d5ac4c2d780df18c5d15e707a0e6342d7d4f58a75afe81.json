{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LIOCOCN\\\\Documents\\\\Git\\\\task-manager\\\\src\\\\components\\\\pages\\\\ActivationPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ReactCodeInput from 'react-code-input';\nimport { activateAccount } from '../../api/authApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActivationPage = () => {\n  _s();\n  const [activationCode, setActivationCode] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleActivation = async () => {\n    try {\n      var _response$data;\n      const response = await activateAccount(activationCode);\n      const token = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.token;\n      if (token) {\n        localStorage.setItem('token', token);\n        navigate('/tasks');\n      } else {\n        throw new Error('Token was not received');\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setErrorMessage(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Incorrect activation code');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-8 rounded shadow-md w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold mb-4 text-center\",\n        children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0430\\u0446\\u0438\\u044F \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600 mb-6 text-center\",\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043A\\u043E\\u0434 \\u0430\\u043A\\u0442\\u0438\\u0432\\u0430\\u0446\\u0438\\u0438, \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u043D\\u044B\\u0439 \\u043D\\u0430 \\u0432\\u0430\\u0448\\u0443 \\u043F\\u043E\\u0447\\u0442\\u0443.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mb-4\",\n        children: /*#__PURE__*/_jsxDEV(ReactCodeInput, {\n          type: \"text\",\n          fields: 6,\n          onChange: value => setActivationCode(value),\n          inputStyle: {\n            margin: '8px',\n            width: '48px',\n            height: '48px',\n            border: '1px solid #ccc',\n            borderRadius: '6px',\n            textAlign: 'center',\n            fontSize: '18px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 text-sm mt-2 text-center\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleActivation,\n        className: \"w-full mt-4 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\",\n        children: \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ActivationPage, \"5vgmk0Vwl69QLnNLJIPYWuGf0ZI=\", false, function () {\n  return [useNavigate];\n});\n_c = ActivationPage;\nexport default ActivationPage;\nvar _c;\n$RefreshReg$(_c, \"ActivationPage\");","map":{"version":3,"names":["React","useState","useNavigate","ReactCodeInput","activateAccount","jsxDEV","_jsxDEV","ActivationPage","_s","activationCode","setActivationCode","errorMessage","setErrorMessage","navigate","handleActivation","_response$data","response","token","data","localStorage","setItem","Error","error","_error$response","_error$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","fields","onChange","value","inputStyle","margin","width","height","border","borderRadius","textAlign","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/LIOCOCN/Documents/Git/task-manager/src/components/pages/ActivationPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ReactCodeInput from 'react-code-input';\r\nimport { activateAccount } from '../../api/authApi';\r\n\r\nconst ActivationPage = () => {\r\n    const [activationCode, setActivationCode] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleActivation = async () => {\r\n        try {\r\n            const response = await activateAccount(activationCode);\r\n\r\n            const token = response?.data?.token;\r\n\r\n            if (token) {\r\n                localStorage.setItem('token', token);\r\n                navigate('/tasks');\r\n            } else {\r\n                throw new Error('Token was not received');\r\n            }\r\n        } catch (error) {\r\n            setErrorMessage(error.response?.data?.message || 'Incorrect activation code');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\r\n            <div className=\"bg-white p-8 rounded shadow-md w-96\">\r\n                <h1 className=\"text-2xl font-bold mb-4 text-center\">Активация аккаунта</h1>\r\n                <p className=\"text-sm text-gray-600 mb-6 text-center\">\r\n                    Введите код активации, отправленный на вашу почту.\r\n                </p>\r\n                <div className=\"flex justify-center mb-4\">\r\n                    <ReactCodeInput\r\n                        type=\"text\"\r\n                        fields={6}\r\n                        onChange={(value) => setActivationCode(value)}\r\n                        inputStyle={{\r\n                            margin: '8px',\r\n                            width: '48px',\r\n                            height: '48px',\r\n                            border: '1px solid #ccc',\r\n                            borderRadius: '6px',\r\n                            textAlign: 'center',\r\n                            fontSize: '18px',\r\n                        }}\r\n                    />\r\n                </div>\r\n                {errorMessage && (\r\n                    <p className=\"text-red-500 text-sm mt-2 text-center\">{errorMessage}</p>\r\n                )}\r\n                <button\r\n                    onClick={handleActivation}\r\n                    className=\"w-full mt-4 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded\"\r\n                >\r\n                    Активировать\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActivationPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}